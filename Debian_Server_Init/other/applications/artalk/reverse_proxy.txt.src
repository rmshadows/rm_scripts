# Reverse Proxy 反向代理
需要启用反代模块 mod_proxy.c
apache

<VirtualHost *:80>
    ServerName your_domain.xxx
    ServerAlias

    RewriteEngine On
    RewriteCond %{QUERY_STRING} transport=polling         [NC]
    RewriteRule /(.*)           http://localhost:23366/$1 [P]

    <IfModule mod_proxy.c>
        ProxyRequests Off
        SSLProxyEngine on
        ProxyPass / http://localhost:23366/
        ProxyPassReverse / http://localhost:23366/
    </IfModule>
</VirtualHost>

前端: Artalk.init({ server: 'http://artalk.your_domain.com' })
Nginx请使用:
server
{
  listen 80;
  listen [::]:80;

  server_name artalk.your_domain.com;

  location / {
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://localhost:23366/;
  }
}

前端网页:
<!-- CSS -->
<link href="https://【$YOUR_DOMAIN】【$REVERSE_PROXY_URL】dist/Artalk.css" rel="stylesheet" />

<!-- JS -->
<script src="https://【$YOUR_DOMAIN】【$REVERSE_PROXY_URL】dist/Artalk.js"></script>

<!-- Artalk -->
<div id="Comments"></div>
<script>
Artalk.init({
  el:        '#Comments',                       // 绑定元素的 Selector
  pageKey:   '/post/1',                         // 固定链接
  pageTitle: '关于引入 Artalk 的这档子事',         // 页面标题 (留空自动获取)
  server:    'https://【$YOUR_DOMAIN】【$REVERSE_PROXY_URL】',  // 后端地址
  site:      '【$YOUR_DOMAIN】',                    // 你的站点名
})





