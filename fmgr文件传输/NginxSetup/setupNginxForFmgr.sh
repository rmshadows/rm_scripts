#!/bin/bash

# 更新包列表并安装 nginx 和 php-fpm
sudo apt update
sudo apt install -y nginx php-fpm

# 检查安装是否成功
if [ $? -ne 0 ]; then
    echo "安装 Nginx 和 PHP-FPM 失败，脚本退出。"
    exit 1
fi

sudo cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bak
sudo cp nginx.conf /etc/nginx/
sudo cp block_ip.conf /etc/nginx/

# 检查并取消 default 配置文件的连接
if [ -L /etc/nginx/sites-enabled/default ]; then
    sudo rm /etc/nginx/sites-enabled/default
    echo "default 配置文件的连接已取消。"
else
    echo "default 配置文件的连接不存在。"
fi

r=`whereis php-fpm`
# echo $r
PF_VERSION=${r#*\/php-fpm}

# 生成新的 http 配置文件
HTTP_CONF='/etc/nginx/sites-available/http'
sudo tee $HTTP_CONF > /dev/null <<EOF
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server
{
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    # Add index.php to the list if you are using PHP
    index index.html index.php index.htm index.nginx-debian.html;
    root /home/HTML;
    
    # error_page 404 https://www.baidu.com;
    # error_page  500 502 503 504  /50x.html;
    
    # PHP
    location ~ .*\.(php|php5)?$
    {
      fastcgi_pass unix:/run/php/php$PF_VERSION-fpm.sock;
      # fastcgi_pass 127.0.0.1:9000;
      fastcgi_index index.php;
      include fastcgi.conf;
    }

    location /x {
        rewrite ^/x(/|/index\.html)?$ /fmgr/index.php;
    }
    
    # rewrite fmgr
    location ~/fmgr/filesfmgr {
        rewrite ^/fmgr/filesfmgr(.*)$ /fmgr/$1;
    }    

    # SSL configuration
    #
    # listen 443 ssl default_server;
    # listen [::]:443 ssl default_server;
    #
    # Note: You should disable gzip for SSL traffic.
    # See: https://bugs.debian.org/773332
    #
    # Read up on ssl_ciphers to ensure a secure configuration.
    # See: https://bugs.debian.org/765782
    # Self signed certs generated by the ssl-cert package
    # Don't use them in a production server!
    #
    # include snippets/snakeoil.conf;

    # pass PHP scripts to FastCGI server
    #location ~ \.php$ {
    #    include snippets/fastcgi-php.conf;
    #
    #    # With php-fpm (or other unix sockets):
    #    fastcgi_pass unix:/run/php/php7.4-fpm.sock;
    #    # With php-cgi (or other tcp sockets):
    #    fastcgi_pass 127.0.0.1:9000;
    #}

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files \$uri \$uri/ =404;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    location ~ /\.ht {
        deny all;
    }
}
EOF

# 链接新的 http 配置文件以启用它
sudo ln -sf $HTTP_CONF /etc/nginx/sites-enabled/http

# 测试 Nginx 配置
sudo nginx -t

# 重新加载 Nginx 以应用更改
sudo systemctl reload nginx

echo "Nginx 和 PHP-FPM 已安装并配置完成，http 配置文件已启用。"

